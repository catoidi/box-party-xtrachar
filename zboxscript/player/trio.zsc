//zboxscript/player/test.zsc

CLASS PlayerTrio : BoxPlayerBase
{
	Default
	{
		Health 90;
		Player.MaxHealth 90;
		Player.StartItem "PlayerTrioToken";
		Player.StartItem "BoxFakeArmor";
		Player.DisplayName "Trio";
		Player.Portrait "INFO_333";
		Player.Face "3AC";
	}
	
	bool OwThatHurt;
	int HurtTimer;
	
	action void CountLooterNum (void)
	{
		invoker.LooterNum = 3 - (self.Health / 30);
	}
	
	override int TakeSpecialDamage(Actor inflictor, Actor source, int damage, Name damagetype)
	{
		int dmgreturn = 0;
		int hpnum = 0;
		
		if (self)
		{
			if (inflictor == null) //damage via non-actor should not give i-frames.
			{
				dmgreturn = 10;
				self.OwThatHurt = false;
			}
			else if ((damage <= 3) && (damage > 0)) //very low damage attacks should not deal the full 30 damage.
			{
				dmgreturn = damage * 2;
				self.OwThatHurt = true;
			}
			else if (damage >= 200) {dmgreturn = damage;} //instakills will still instakill
			else if (self.OwThatHurt == false) //prevent attacks from proccing twice in an instant.
			{
				hpnum = self.health;
				while (hpnum > 0)
				{
					if (hpnum < 30) {dmgreturn = 30 + hpnum;}
					else {dmgreturn = 30;}
					self.OwThatHurt = true;
					hpnum += -30;
				}
			}
		}
		
		return dmgreturn;
	}
	
	override void Tick(void)
	{
		CountLooterNum();
		
		Super.Tick();
		
		if (self)
		{
			if (self.OwThatHurt == true)
			{
				if (self.HurtTimer > 0) {--self.HurtTimer;}
				else
				{
					if (bINVULNERABLE == false)
					{
						self.HurtTimer = 35;
						bINVULNERABLE = true;
					}
					else
					{
						self.OwThatHurt = false;
						bINVULNERABLE = false;
					}
				}
			}
		}
	}
	
	States
	{
		Spawn:
			3BOX A 0 NoDelay A_BoxHatTime(true);
			3BOX A -1;
			Loop;
		See:
			3BOX AB 7;
			Loop;
		Missile:
			"####" "#" 1;
			"####" "#"  0 A_JumpIfInventory("GlowstickIsFiring", 1, "Melee");
			3BOX D 4 BRIGHT;
			3BOX E 8;
			Goto Spawn;
		Melee:
			3BOX C 12;
			Goto Spawn;
		Pain:
			3BOX L 4 A_Pain;
			3BOX L 4;
			Goto Spawn;
		Death:
			3BOX I 0 A_BoxHatTime(false);
			3BOX I 10 A_PlayerScream;
			3BOX J 10;
			3BOX K 10 A_NoBlocking;
			3BOX K -1;
			Stop;
		XDeath:
			3BOX F 0 A_BoxHatTime(false);
			3BOX F 10 A_XScream;
			3BOX G 10;
			3BOX H 10 A_NoBlocking;
			3BOX H -1;
			Stop;
	}
}